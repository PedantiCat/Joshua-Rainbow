{"hash":"99920f5f7e4a99aa067ee365acb868a427be8651","data":{"programming":{"id":"ce8444a56aadf236a804ebf51168b0c4","title":"Haskell Bombe","github":"https://github.com/TheTeaCat/COM2108-Assignment-3","content":"<h1 id=\"com2108-assignment-3\"><a href=\"#com2108-assignment-3\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>COM2108-Assignment-3</h1>\n<p>This was an assignment to implement the Bombe in Haskell, given some constraints. Assignment 2 (Enigma.hs) is also included in this repository as it is a dependency for assignment 3.</p>\n<p>Part of this assignment was an extension for which there were some suggestions, but we were free to go beyond. Extension.hs is an extended version of Bombe.hs, a description of the changes can be found in <a href=\"https://github.com/TheTeaCat/COM2108-Assignment-3/blob/master/report.md\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">report.md</a>, but in summary it is parallelised. </p>\n<h2 id=\"setup\"><a href=\"#setup\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Setup</h2>\n<p>Enigma.hs and Bombe.hs should run happily in GHCi.</p>\n<p>Extension.hs has a dependency and needs to be compiled to take advantage of the parallelisation.</p>\n<ul>\n<li>\n<p>Install dependencies:</p>\n<pre><code>cabal update\ncabal install parallel\n</code></pre>\n</li>\n<li>\n<p>Compile:</p>\n<pre><code>ghc Extension.hs -threaded\n</code></pre>\n</li>\n<li>\n<p>Run:</p>\n<pre><code>./Extension +RTS -N{x}\n</code></pre>\n<p>Replace <code>{x}</code> with the number of threads you wish to utilise.</p>\n</li>\n</ul>\n<h2 id=\"extensionhs-default-setup\"><a href=\"#extensionhs-default-setup\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Extension.hs Default Setup</h2>\n<p>Extension.hs is set up by default to decode the following message:</p>\n<pre><code class=\"language-haskell\">YZCSDCVUFVJAAEMVILWRVSQZFCBPJFVYHUUPHLAPJMTMFNLURRADJFCBRBXBCUSSXVYWAPQIRCUVVNODKELDMNNQHYFEFOZPBUIPWKPXIYPKQHMVOAVXFVDCKMZOULMTQNUFBVHFUSXYCYPWFKBYW\n</code></pre>\n<p>Assuming: </p>\n<ul>\n<li>The crib is <code>COMPUTERSCIENCESHEFFIELDUNIVERSITYSTOP</code></li>\n<li>The left rotor is <code>EKMFLGDQVZNTOWYHXUSPAIBRCJ</code></li>\n<li>The middle rotor is <code>AJDKSIRUXBLHWTMCQGZNPYFVOE</code></li>\n<li>The right rotor is <code>BDFHJLCPRTXVZNYEIWGAKMUSQO</code></li>\n<li>The reflector is paired as follows: <code>[('A','Y'),('B','R'),('C','U'),('D','H'),('E','Q'),('F','S'),('G','L'),('I','P'),('J','X'),('K','N'),('M','O'),('T','Z'),('V','W')]</code></li>\n</ul>\n<p>You can change all of this in the definition of <code>main</code>.</p>\n<p>It should decode to:</p>\n<pre><code class=\"language-haskell\">COMPUTERSCIENCESHEFFIELDUNIVERSITYSTOPENIGMAMACHINESAREINTERESTINGBUTTHOSECODEBREAKERSWHOCRACKEDTHECODEMUSTHAVEBEENGENIUSESTODOSOWITHOUTCOMPUTERSSTOP\n</code></pre>\n<p>With offsets <code>(4,3,7)</code> of the left, middle and right rotors respectively, and a steckerboard equivalent to:</p>\n<pre><code class=\"language-haskell\">[('T','T'),('K','C'),('N','E'),('O','M'),('V','V'),('P','P'),('S','S'),('J','U'),('X','F'),('G','R'),('L','D'),('B','Z')]\n</code></pre>\n"}},"context":{}}